name: Build TaleListener

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android_build:
    if: false
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-gradle

      - name: Build Android APK
        run: ./gradlew clean assembleDebug

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: composeApp/build/outputs/apk/debug/*.apk

  # todo: author and licence unknown; name is shown as org in Discover, name in desktop env is org.overengineer.talelistener https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-native-distribution.html#specifying-distribution-properties
  # todo: crashes on start on kde
  desktop_build_rpm:
    name: Build Desktop RPM
    runs-on: ubuntu-latest
    container: fedora:latest

    steps:
      - name: Install dependencies
        run: dnf install -y git rpm-build

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-fedora-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-fedora-gradle

      - name: Build Desktop RPM
        run: ./gradlew clean packageReleaseRpm

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm
          path: composeApp/build/compose/binaries/main-release/rpm/*.rpm


  desktop_build_deb:
    name: Build Desktop DEB
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-gradle

      - name: Build Desktop DEB
        run: ./gradlew clean packageReleaseDeb

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: composeApp/build/compose/binaries/main-release/deb/*.deb

  desktop_build_appimage:
    name: Build Desktop AppImage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-appimage-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-appimage-gradle

      - name: Build Desktop AppImage
        run: ./gradlew clean packageAppImage

      - name: Uber jar
        run: ./gradlew packageReleaseUberJarForCurrentOS

      # placeholder icon
      - name: Create AppDir
        run: |
          mkdir -p AppDir/usr/share/metainfo
          cp deploy/linux/appimage/TaleListener.desktop AppDir/
          cp deploy/linux/appimage/AppRun AppDir/
          cp composeApp/src/commonMain/composeResources/drawable/audiobook_fallback.png AppDir/org.overengineer.talelistener.png
          chmod +x AppDir/AppRun

        # cp deploy/linux/appimage/TaleListener.appdata.xml AppDir/usr/share/metainfo/

      - name: Copy jar into AppDir
        run: cp composeApp/build/compose/jars/*.jar AppDir/talelistener.jar

      - name: Create minimal jre
        run: |
          JRE_DIR=$(dirname $(dirname $(readlink -f $(which java))))
          jlink --module-path "$JRE_DIR/jmods" \
            --add-modules java.base,java.desktop,jdk.unsupported,java.logging,java.net.http,java.sql \
            --strip-debug --compress=2 --no-header-files --no-man-pages --output AppDir/jre

      - name: Run Appimagetool
        run: |
          wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage AppDir TaleListener.AppImage

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppImage
          path: TaleListener.AppImage

  desktop_build_win:
    name: Build Desktop WIN
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      #
      # - name: Cache Gradle packages
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-${{ runner.arch }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      #     restore-keys: ${{ runner.os }}-${{ runner.arch }}-gradle

      - name: Build Desktop WIN
        run: ./gradlew clean packageReleaseExe

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: composeApp/build/compose/binaries/main-release/exe/*.exe

  desktop_build_mac_arm:
    name: Build Desktop MAC-ARM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-gradle

      - name: Build Desktop MAC-ARM
        run: ./gradlew clean packageReleaseDmg

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-arm-dmg
          path: composeApp/build/compose/binaries/main-release/dmg/*.dmg


  desktop_build_mac_intel:
    name: Build Desktop MAC-Intel
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ runner.arch }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-gradle

      - name: Build Desktop MAC-ARM
        run: ./gradlew clean packageReleaseDmg

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-intel-dmg
          path: composeApp/build/compose/binaries/main-release/dmg/*.dmg
